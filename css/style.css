/* 
Comentario en CSS
Regla CSS consta de dos partes
1) el selector
2) Bloque de declaraciones: {
    atributo: valor;
  atributo-de-mas-dos-palabras: otro-valor;
}
*/

/* Son mala pr√°ctica porque son bloqueantes a la hora de que el navegador lea esta instrucci√≥n */
/* @import url("otro-hoja.css"); */

h1 {
    color: orangered;
    background-color: black;
}

/* Selectores B√°sicos
  1) Etiquetas - elementos html
  2) Identificadores - atributo id - #
  3) Clases - atributo clase - .
*/

p {
  color: midnightblue;
}

/* Dar estilos con Id se considera un antipatr√≥n */
#parrafo-dos {
  background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro c√≥digo CSS */


.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}

.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.text-white {
  color: white;
}

.hijos-directos > li {
  background-color: thistle;
}

.hijos-descendientes b {
  background-color: thistle;
}

/* Los selectores de hermanos van a aplicar a los elementos que son hermanos y que est√©n por debajo del elemento de referencia */
.hermanos-general ~ li {
  background-color: thistle;
}

.hermanos-adyacentes + li {
  background-color: thistle;
}

/* Selectores de atributos */
.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/* El comod√≠n del * aplica el estilo si contiene el texto en cuesti√≥n en cualquier parte */
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/* El  comod√≠n del ^ aplica el estilo si contiene el texto en cuesti√≥n al inicio */
.selectores-atributos a[href^="http:"] {
  text-decoration: none;
}

/* El  comod√≠n del $ aplica el estilo si contiene el texto en cuesti√≥n al final */
.selectores-atributos a[href$=".com"] {
  background-color: black;
}

/* El comod√≠n del ~ aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios */
.selectores-atributos a[class~="cursos"] {
  background-color: midnightblue;
}

/* El comod√≠n del | aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios y que despu√©s del texto en cuesti√≥n venga un gui√≥n medio - */
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/* Selector Universal */
* {
  font-family: sans-serif;
}

.selector-universal * {
  font-size: 24px;
}

/* Pseudoclases - Dan estilos dependiendo del contexto, posici√≥n o estado del elemento */

.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}

.form-pseudoclases *:focus {
  background-color: skyblue;
}

.form-pseudoclases *:disabled {
  background-color: pink;
}

.menu-pseudoclases a:visited{
  color: olive;
}

.menu-pseudoclases a:hover{
  color: orange;
}

.p-pseudoclases:hover {
  font-size: 20px;
}

#temario-css:target {
  background-color: lightgreen;
}

.lista-pseudoclases li:first-child {
  color: green;
}

.lista-pseudoclases li:last-child {
  color: violet;
}

.lista-pseudoclases li:nth-child(3) {
  color: navy;
}

.lista-pseudoclases li:nth-child(4n) {
  font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n+1) {
  font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
  background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd) {
  background-color: orange;
}

.articulo-pseudoclases p:first-of-type {
  background-color: pink;
}

.articulo-pseudoclases p:last-of-type {
  background-color: violet;
}

.articulo-pseudoclases p:nth-of-type(3) {
  background-color: fuchsia;
}

.articulo-pseudoclases *:not(p) {
  background-color: beige;
}

/* Pseudoelementos - Dan estilos a partes espec√≠ficas de un elemento, se usa el :: para diferenciarlos de las pseudoclases */

.saga-geminis::before {
  content: "üíë";
}

.saga-geminis::after {
  content: "‚ôä";
}

.saga-precio::before {
  content: "$";
  font-weight: bold;
}

.saga-precio::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32px;
}

.p-pseudoelementos::first-line {
  color: coral;
}

.p-pseudoelementos::selection {
  color: greenyellow;
  background-color: black;
}

.input-pseudoelementos::placeholder {
  color: green;
}

/* Agrupar Selectores */

.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}

/* La Herencia es la capacidad de un selector de obtener (heredar) los valores de sus ancestros m√°s cercanos, para aplicarla se usa el valor inherit; si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuesti√≥n con el valor initial  */

blockquote#cita-marco.cita-marco {
  background-color: lightsteelblue ;
}

blockquote {
  background-color: burlywood;
}

#cita-marco {
  background-color: lightgreen;
}

blockquote.cita-marco {
  background-color: tomato;
}

.cita-marco {
  background-color: cornflowerblue;
}

blockquote#cita-marco {
  background-color: lightsalmon;
}

.cita-marco cite {
  background-color: pink;
  background-color: inherit;
}